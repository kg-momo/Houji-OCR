フーリエ記述子によるルビ除去プログラムについて

【img_preprocess.py】
・入力画像の前処理を行うプログラム
・画像から文字の輪郭点を取得します．
・実行例 
入力画像の入ったディレクトリが「./input/test/」のとき
python img_preprocess.py ./input/test/
・出力
「./output/test/img_preprocess/」に
入力画像から取得した輪郭を可視化した画像を出力します．

【edge_fourier.py】
・入力画像から，前処理を行い，得られた輪郭点からフーリエ記述子を取得するプログラム
・実行例 
入力画像の入ったディレクトリが「./input/test/」のとき
python edge_fourier.py ./input/test/
・出力
入力画像名が 「img00.jpg」, 「img01.jpg」,... のとき
「./output/test/edge_fourier/img00/」,「./output/test/edge_fourier/img01/」,...
ディレクトリが作成され
それぞれのフーリエ記述子による輪郭点を可視化した画像が出力されます．

【hantei_histgram.py】
・入力画像から，前処理，フーリエ記述子の取得を行い，
　フーリエ記述子からルビの有無の判定と，ルビの位置を取得するプログラム
・フーリエ記述子により得た輪郭線内を塗りつぶし，縦方向のヒストグラムをとり，
　ヒストグラムの谷となる部分でルビ位置を判定しています．
・実行例 
入力画像の入ったディレクトリが「./input/test/」のとき
python hantei_histgram.py ./input/test/
・出力
「./output/test/hantei_hist/」に
　　・フーリエ記述子による輪郭線の塗りつぶしを行ったものを可視化したもの
　　・縦方向濃度ヒストグラムを可視化したもの
　　・判定されたルビの位置を可視化したもの
が出力されます．


＜ルビ判定結果について＞
【条件】
・フーリエ記述子の次数最大値：15
・ルビの有無判定条件について
　argleminによる極小値を得、最小値を取るの極小値idが以下の条件を満たすとき、
　ルビがあると判定する。
　　・ y[id] > max_darkness/2　(max_darkness: 濃度の最大値)
　　・ id < width/2 (width: 入力画像の幅)

【手作業による集計結果】
[ルビあり 正解]：222
[ルビなし 正解]：104
[ルビあり 不正解]：24
[ルビなし 不正解]：19
正解数：326/369 (0.8835)

・「い」や「か」の文字が画像に含まれていると，ルビがあると誤判定される場合が多いです．
・ルビの判定方法に，濃度ヒストグラムを取る以前に，画像幅が一定以下である場合にルビ無しと判定する方法を検討していますが，これについては未実装です．

